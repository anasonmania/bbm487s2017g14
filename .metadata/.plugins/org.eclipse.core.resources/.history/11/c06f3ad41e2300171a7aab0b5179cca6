package application.controller;

import java.io.IOException;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ResourceBundle;

import com.sun.media.jfxmedia.events.NewFrameEvent;

import application.Main;
import application.model.User;
import javafx.animation.FadeTransition;
import javafx.animation.KeyFrame;
import javafx.animation.KeyValue;
import javafx.animation.Timeline;
import javafx.event.ActionEvent;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.util.Duration;

public class Login {

	public Button createAccount;
	public Button login;
	public TextField tfUsername;
	public PasswordField pfPassword;
	public Rectangle rUsername, rPassword;
	public Boolean loginControl;

	public GridPane paneMain;
	public HBox boxFailed;
	public Pane iconFailed;
	public Label lbFailed;


	private Timeline failExpand;
	private FadeTransition showIconFailed;
	private FadeTransition hideIconFailed;

	public void handleLogin(ActionEvent event) throws SQLException, IOException {
		loginControl = false;
		setSizeAnims();

		String inputUsername, inputUserpass;
		inputUsername = tfUsername.getText();
		inputUserpass = pfPassword.getText();
		PreparedStatement statement = Main.con
				.prepareStatement("SELECT password FROM user WHERE username = '" + inputUsername + "' ");

		ResultSet result = statement.executeQuery();
		String temp = null;

		while (result.next()) {
			temp = result.getString(1);
		}

		if (temp != null) {
			if (temp.equals(inputUserpass)) {
				loginControl = true;
				statement = Main.con
						.prepareStatement("SELECT * from user WHERE username = '" + inputUsername + "' ");
				result = statement.executeQuery();
				while(result.next()){
					Main.currentUser = new User(result.getString("username"), result.getString("email"), result.getString("name"),
							result.getString("surname"), result.getString("phonenumber"), result.getDate("birthdate"),
							result.getInt("iduserinfo"), result.getInt("schoolnumber"), result.getInt("islibrarian"));
					System.out.println(result.getString("username"));
					System.out.println(Main.currentUser.getSurname());

				}

				int islabrarian = Main.currentUser.getIsLabrarian();
				System.out.println(Main.currentUser.getIsLabrarian());

				if(islabrarian > 0){
					Parent newParent;
					newParent = FXMLLoader.load(getClass().getResource("../view/HomePageLibrarian.fxml"));
					Scene newScreen = new Scene(newParent);
					Stage appStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
					appStage.setScene(newScreen);
					appStage.show();
				}
				else{
					Parent newParent;
					newParent = FXMLLoader.load(getClass().getResource("../view/HomePageCustomer.fxml"));
					Scene newScreen = new Scene(newParent);
					Stage appStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
					appStage.setScene(newScreen);
					appStage.show();
				}


				System.out.println(Main.currentUser.getBirthDate());
				System.out.println(Main.currentUser.getIsLabrarian());
			}
		}

		if(!loginControl){
			failExpand.play();
			showIconFailed.play();
		}
	}

	public void handleCreateAccount(ActionEvent event) throws IOException {

		Parent newParent = FXMLLoader.load(getClass().getResource("../view/CreateAccount.fxml"));
		Scene newScreen = new Scene(newParent);
		Stage appStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
		appStage.setScene(newScreen);
		appStage.show();

	}

	public void lineUsername() {
		rUsername.setOpacity(1);
	}

	public void linePassword() {
		rPassword.setOpacity(1);
	}

	public void setSizeAnims(){
		failExpand = new Timeline();
		failExpand.getKeyFrames().addAll(new KeyFrame(Duration.ZERO, new KeyValue(boxFailed.prefHeightProperty(), 0)),
				new KeyFrame(Duration.millis(300.0d), new KeyValue(boxFailed.prefHeightProperty(), 36)));
	}

	public void setOpacityAnims(){
		showIconFailed = new FadeTransition(Duration.millis(300.0d), iconFailed);
		showIconFailed.setFromValue(0);
		showIconFailed.setToValue(1);
	}

}
